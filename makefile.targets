################################################################################
# Additional makefile targets
################################################################################

# include project-specific variables
include ../.myriad-settings

# the path to the myriad assistant binary
MYRIAD_ASSISTANT = ../vendor/myriad-toolkit/bin/assistant

# include the following files in the package
# ./config/*.properties   -- properties config files
# ./config/*.domain       -- attribute domain enumerations
# ./config/*.distribution -- attribute domain distributions
CONFIG_DIRS      = $(shell cd ../src && find config -type d | grep -v '\.svn')
CONFIG_FILES     = $(shell cd ../src && find config -type f -name "*.properties")
CONFIG_FILES    += $(shell cd ../src && find config -type f -name "*.distribution")
CONFIG_FILES    += $(shell cd ../src && find config -type f -name "*.domain")
CONFIG_FILES    += $(shell cd ../vendor/myriad-toolkit/src && ls config/*xsd)
CONFIG_FILES    += config/$(MYRIAD_DGEN_NAME)-frontend.template.xml

# uncomment one of the following lines depending on whether you maintain a 
# $(MYRIAD_DGEN_NAME)-frontend.xml script in your src/config folder or not 
CONFIG_FILES    += config/$(MYRIAD_DGEN_NAME)-frontend.template.xml
#CONFIG_FILES    += config/$(MYRIAD_DGEN_NAME)-frontend.xml

# script files
SCRIPT_FILES     = bin/$(MYRIAD_DGEN_NAME)-frontend
SCRIPT_FILES    += bin/$(MYRIAD_DGEN_NAME)-kill

# python files & dirs
PYTHON_DIRS      = $(shell cd ../vendor/myriad-toolkit/src/python && find -mindepth 1 -type d | grep -v '\.svn' | sed 's/^.\//lib\/python\/vendor\//')
PYTHON_FILES     = $(shell cd ../vendor/myriad-toolkit/src/python && find -type f | grep -v '\.svn' | sed 's/^.\//lib\/python\/vendor\//')

# All Target
all: work-dirs script-files config-files lib-misc lib-poco CHANGELOG LICENSE NOTICE README.md bin/$(MYRIAD_DGEN_NAME)-node

cleanall: clean
	rm -Rf bin
	rm -Rf config
	rm -Rf lib
	rm -Rf CHANGELOG LICENSE NOTICE README.md

install: 
	mkdir -p $(MYRIAD_INSTALL_DIR)/$(MYRIAD_DGEN_NAME)
	cp -Rf ./bin $(MYRIAD_INSTALL_DIR)/$(MYRIAD_DGEN_NAME)
	cp -Rf ./config $(MYRIAD_INSTALL_DIR)/$(MYRIAD_DGEN_NAME)
	cp -Rf ./lib $(MYRIAD_INSTALL_DIR)/$(MYRIAD_DGEN_NAME)
	cp CHANGELOG $(MYRIAD_INSTALL_DIR)/$(MYRIAD_DGEN_NAME)
	cp LICENSE $(MYRIAD_INSTALL_DIR)/$(MYRIAD_DGEN_NAME)
	cp NOTICE $(MYRIAD_INSTALL_DIR)/$(MYRIAD_DGEN_NAME)
	cp README.md $(MYRIAD_INSTALL_DIR)/$(MYRIAD_DGEN_NAME)

work-dirs: 
	@echo 'Creating directory hierarchy'
	mkdir -p bin
	mkdir -p config
	mkdir -p lib
	mkdir -p lib/c++
	mkdir -p lib/python
	mkdir -p lib/query
	for dir in ${CONFIG_DIRS}; do \
		mkdir -p $$dir; \
	done
	for dir in ${PYTHON_DIRS}; do \
		mkdir -p $$dir; \
	done
	@echo ' '
	
config-files: $(CONFIG_FILES)
	@echo ' '

lib-misc: $(PYTHON_FILES) 
	@echo ' '
	
script-files: $(SCRIPT_FILES)
	@echo ' '
	
lib-poco:
	@echo 'Copying lib files'
	find $(POCO_LIBRARY_PATH) -name "libPoco*" -type f -exec cp -f {} ./lib/c++/. \;
	find $(POCO_LIBRARY_PATH) -name "libPoco*" -type l -exec cp -PRf {} ./lib/c++/. \;
	@echo ' '

bin/$(MYRIAD_DGEN_NAME)-%: ../vendor/myriad-toolkit/src/script/myriad-%
	@echo 'Processing: $@'
	cp $< $@ && chmod 0755 $@

config/$(MYRIAD_DGEN_NAME)-frontend.template.xml: ../src/config/$(MYRIAD_DGEN_NAME)-frontend.template.xml
	@echo 'Processing $@'
	cp $< $@

config/$(MYRIAD_DGEN_NAME)-frontend.xml: ../src/config/$(MYRIAD_DGEN_NAME)-frontend.xml
	@echo 'Processing $@'
	cp $< $@

config/%.xsd: ../vendor/myriad-toolkit/src/config/%.xsd
	@echo 'Processing $@'
	cp $< $@
	
config/%: ../src/config/%
	@echo 'Processing: $@'
	cp -r $< $@
	
lib/python/%.py: ../src/python/%.py
	@echo 'Processing $@'
	cp $< $@

lib/python/vendor/%.py: ../vendor/myriad-toolkit/src/python/%.py
	@echo 'Processing $@'
	cp $< $@

CHANGELOG: ../src/resources/CHANGELOG
	@echo 'Processing: $@'
	cp $< $@
	
LICENSE: ../src/resources/LICENSE
	@echo 'Processing: $@'
	cp $< $@

NOTICE: ../src/resources/NOTICE
	@echo 'Processing: $@'
	cp $< $@

README.%: ../src/resources/README.%
	@echo 'Processing: $@'
	cp $< $@
	
prototype:
	@echo 'Compiling data generator prototype sources for $(MYRIAD_DGEN_NAME)'
	$(MYRIAD_ASSISTANT) compile:prototype

.PHONY: all tests clean dependents tests cleanall install work-dirs script-files config-files lib-misc lib-poco dgen-prototype-sources
.SILENT: work-dirs lib-poco
